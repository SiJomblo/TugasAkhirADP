@model TugasAkhir.Models.user

@{
    ViewBag.Title = "AddorEdit";
    Layout = null;
}

@using (Html.BeginForm("AddorEdit", "users", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return jQueryAjaxPost(this);", data_restUrl = Url.Action("AddorEdit", "users", new { id = 0 }) }))
{
    @Html.AntiForgeryToken()
<div class="row">
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.foto_profil)
        @Html.Hidden("nik", Model.nik, new { @id = "nik" })
        <div class="col-md-6">
                <div class="form-group" id="confirnip">
                    @Html.LabelFor(model => model.nip, "NIP", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.nip, new { htmlAttributes = new { @class = "form-control", required = "required", id = "nip" } })                 
                        @Html.ValidationMessageFor(model => model.nip, "", new { @class = "text-danger" })
                    </div>
                </div>
            <div class="form-group">
                @Html.LabelFor(model => model.nama, "Nama", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.nama, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.nama, "", new { @class = "text-danger" })
                </div>
            </div>
                <div class="form-group" id="confir2">
                    @Html.LabelFor(model => model.email, "E-Mail", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", type = "email", required = "required"} })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </div>

            <div class="form-group">
                @Html.LabelFor(model => model.password, "Password", htmlAttributes: new { @class = "control-label col-md-3" })
                @if (Model.password == null)
                {
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.password, new { htmlAttributes = new { @Value = "adins" + @DateTime.Now.Year, @class = "form-control", @required = "required" } })
                    </div>
                }
                else
                {
                    <div class="col-md-4">
                        <input type="password" value="*********" class="form-control" readonly="readonly" />
                    </div>
                    <div class="col-md-3" style="margin-left:20px;">
                        <a onclick="ResetPassword()" class="btn btn-danger"><span class="fa fa-redo-alt"></span> Reset</a>
                    </div>
                }
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.tempat_lahir, "Tempat Lahir", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.tempat_lahir, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.tempat_lahir, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.tanggal_lahir, "Tanggal Lahir", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.TextBoxFor(model => model.tanggal_lahir, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.jenis_kelamin, "Jenis Kelamin", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(x => x.jenis_kelamin, new List<SelectListItem>
                    {
                    new SelectListItem() {Text = "Laki-Laki", Value="L"},
                    new SelectListItem() {Text = "Perempuan", Value="P"}
                    }, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.no_hp, "No. Handphone", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.no_hp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.no_hp, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.pendidikan_akhir, "Pendidikan", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(x => x.pendidikan_akhir, new List<SelectListItem>
                     {
                     new SelectListItem() {Text = "SMA", Value="SMA"},
                     new SelectListItem() {Text = "D3", Value="D3"},
                     new SelectListItem() {Text = "Sarjana", Value="S1"},
                     new SelectListItem() {Text = "Magister", Value="S2"},
                     new SelectListItem() {Text = "Doktor", Value="S3"}
                     }, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.jurusan, "Jurusan", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.jurusan, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.jurusan, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.agama, "Agama", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(x => x.agama, new List<SelectListItem>
                     {
                     new SelectListItem() {Text = "Islam", Value="Islam"},
                     new SelectListItem() {Text = "Kristen", Value="Kristen"},
                     new SelectListItem() {Text = "Katolik", Value="Katolik"},
                     new SelectListItem() {Text = "Hindu", Value="Hindu"},
                     new SelectListItem() {Text = "Buddha", Value="Buddha"},
                     new SelectListItem() {Text = "Kong Hu Cu", Value="Kong Hu Cu"}
                     }, htmlAttributes : new { @class = "form-control"} )
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.no_ktp, "No. KTP", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.no_ktp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.no_ktp, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.foto_profil, "Foto", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <img src="@Url.Content(Model.foto_profil)" class="img-circle" style="margin:10px;" width="200" height="200" id="imagePreview" />
                    <input type="file" name="foto" accept="image/jpeg, image/png" onchange="ShowImagePreview(this, document.getElementById('imagePreview'))" />
                </div>
            </div>

        </div>


        <div class="col-md-6">

            <div class="form-group">
                @Html.LabelFor(model => model.alamat_domisili, "Alamat Domisili", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.TextAreaFor(model => model.alamat_domisili, new { @class = "form-control", @rows = "3" })
                    @Html.ValidationMessageFor(model => model.alamat_domisili, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.alamat_ktp, "Alamat KTP", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.TextAreaFor(model => model.alamat_ktp, new { @class = "form-control", @rows = "3" })
                    @Html.ValidationMessageFor(model => model.alamat_ktp, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.bpjs, "BPJS", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.bpjs, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.bpjs, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.npwp, "NPWP", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.npwp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.npwp, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.status_pajak, "Status Pajak", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.status_pajak, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.status_pajak, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.join_date, "Join Date", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">

                    @if (Model.join_date == default(DateTime))
                    {
                        @Html.EditorFor(model => model.join_date, new { htmlAttributes = new { @class = "form-control", Type = "Date", @required = "required" } })
                    }
                    else
                    {
                        @Html.HiddenFor(model => model.join_date, "{0:yyyy-MM-dd}")
                        @Html.TextBox("joindate", String.Format("{0:dd MMMM yyyy}", Model.join_date), htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    }
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.no_rekening, "No. Rekening", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.no_rekening, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.no_rekening, "", new { @class = "text-danger" })
                </div>
            </div>
            @if (Session["nik"] != null)
            {
                if (Session["jabatan"].ToString() == "s")
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.jabatan, "Jabatan", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(x => x.jabatan, new List<SelectListItem>
                                {
                                new SelectListItem() {Text = "Karyawan", Value="k"},
                                new SelectListItem() {Text = "Admin", Value="a"}
                                }, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                }
                else
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.jabatan, "Jabatan", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(x => x.jabatan, new List<SelectListItem>
                                {
                                new SelectListItem() {Text = "Karyawan", Value="k"}
                                }, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                }
            }
            <div class="form-group">
                @Html.LabelFor(model => model.penempatan, "Penempatan", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.penempatan, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.penempatan, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.posisi, "Posisi", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.posisi, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.posisi, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.status_kerja, "Status Kerja", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(x => x.status_kerja, new List<SelectListItem>
                        {
                        new SelectListItem() {Text = "Aktif", Value="Aktif"},
                        new SelectListItem() {Text = "Tidak Aktif", Value="Tidak Aktif"}
                        }, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
        </div>

        <div class="col-md-6">

        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.file_ktp, "KTP", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <input type="file" name="filektp" accept="image/jpeg, image/png, .doc, .docx, .pdf" />
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.file_npwp, "NPWP", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <input type="file" name="filenpwp" accept="image/jpeg, image/png, .doc, .docx, .pdf" />
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.file_rekening, "Rekening", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <input type="file" name="filerekening" accept="image/jpeg, image/png, .doc, .docx, .pdf" />
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.file_ijasah, "Ijasah", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <input type="file" name="fileijasah" accept="image/jpeg, image/png, .doc, .docx, .pdf" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-3 col-md-9">
                    <input type="submit" value="Submit" class="btn btn-primary" />
                    @if (Model.nik != 0)
                    {
                        <a class="btn btn-success" onclick="refreshAddNewTab('@Url.Action("AddorEdit","users", new { id=0})', false)"><i class="glyphicon glyphicon-plus"></i> Add New</a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
}