@model TugasAkhir.Models.claim_medical

@{
    ViewBag.Title = "Edit";
    Layout = null;
}


@using (Html.BeginForm("EditClaimK", "claim_medical", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return ajaxeditclaimk(this);", data_restUrl = Url.Action("EditClaimK", "claim_medical", new { id = 0 }) }))
{
    <div class="row">
        <div class="form-horizontal">
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.id_claim)
            @Html.HiddenFor(model => model.nik)
            @Html.HiddenFor(model => model.tipe_perawatan)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.tanggal, "Tanggal", new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBox("Tanggal", String.Format("{0:dd MMMM yyyy}", DateTime.Now), htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.tipe_perawatan, "Type Perawatan", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBox("tipe", Model.tipe_perawatan, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.tanggal_perawatan, "Tanggal Perawatan", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.tanggal_perawatan, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.tanggal_perawatan, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.nama_pasien, "Nama Pasien", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.nama_pasien, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.nama_pasien, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.hubungan, "Hubungan", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.hubungan, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.hubungan, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.nama_dokter, "Nama Dokter", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.nama_dokter, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.nama_dokter, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.diagnosa, "Diagnosa", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.diagnosa, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.diagnosa, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.no_telp, "No. Telpon", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.no_telp, new { htmlAttributes = new { @class = "form-control", @required = "required", @onkeypress = "return hanyaAngka(event)" }})
                        @Html.ValidationMessageFor(model => model.no_telp, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.lokasi_RS, "Lokasi RS", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.lokasi_RS, new { @class = "form-control", @rows = "2" })
                        @Html.ValidationMessageFor(model => model.lokasi_RS, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.total_tagihan, "Total Tagihan", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.total_tagihan, new { htmlAttributes = new { @class = "form-control", @required = "required", @onkeypress = "return hanyaAngka(event)" } })
                        @Html.ValidationMessageFor(model => model.total_tagihan, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Bukti Kwitansi", new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <input type="file" name="filekwintasi" accept="image/jpeg, image/png, .doc, .docx, .pdf" />
                    </div>
                </div>
                @if (Model.file_kwintasi != null)
                {
                    <div class="form-group">
                        @Html.Label("Download Kwitansi", new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <a href="@Url.Action("Download", "claim_medical", new { filepath = Model.file_kwintasi.ToString() })" class="btn btn-primary"><span class="fa fa-download"></span> Download</a>
                        </div>
                    </div>
                }
                @if (Model.status == "Reject")
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.keterangan, "Alasan Reject", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.keterangan, new { @class = "form-control", @rows = "3", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.keterangan, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
            </div>

            <hr style="border:2px double #eaeaea;" />
            <div class="form-group">
                <div class="col-sm-offset-8 col-sm-2">
                    <button type="submit" class="btn btn-success"><span class="fa fa-save"></span> Ajukan Kembali</button>
                </div>
            </div>
        </div>
    </div>

}